name: Deploy Agenda to Azure VM

on:
  push:
    branches: [master]
  workflow_dispatch:

concurrency:
  group: deploy
  cancel-in-progress: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: '{"clientId":"${{ secrets.AZURE_CLIENT_ID }}","clientSecret":"${{ secrets.AZURE_CLIENT_SECRET }}","subscriptionId":"${{ secrets.AZURE_SUBSCRIPTION_ID }}","tenantId":"${{ secrets.AZURE_TENANT_ID }}"}'

      - name: Allow runner IP in NSG (temporary)
        run: |
          RUNNER_IP=$(curl -s https://api.ipify.org)
          echo "Runner IP: $RUNNER_IP"
          RULE_NAME="Deploy-$(date +%s)"
          echo "RULE_NAME=$RULE_NAME" >> $GITHUB_ENV
          az network nsg rule create \
            --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} \
            --nsg-name ${{ secrets.AZURE_NSG_NAME }} \
            --name $RULE_NAME \
            --protocol Tcp \
            --priority 200 \
            --destination-port-range ${{ secrets.SSH_PORT }} \
            --source-address-prefix $RUNNER_IP \
            --access Allow \
            --direction Inbound \
            --description "Temporary deployment access"

      - name: Deploy on VM
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          port: ${{ secrets.SSH_PORT }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            set -e
            cd ${{ secrets.PROJECT_PATH }}

            git fetch --all
            git reset --hard origin/master

            if [ ! -d "venv" ]; then
              python3 -m venv venv
            fi

            source venv/bin/activate
            pip install --upgrade pip
            pip install -r requirements.txt

            cd backend
            python manage.py migrate --noinput
            python manage.py collectstatic --noinput

            cd ../frontend
            npm ci
            npm run build

            sudo systemctl restart agenda-backend
            sudo systemctl reload nginx

      - name: Remove temporary NSG rule
        if: always()
        run: |
          if [ -n "$RULE_NAME" ]; then
            az network nsg rule delete \
              --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} \
              --nsg-name ${{ secrets.AZURE_NSG_NAME }} \
              --name $RULE_NAME || echo "Failed to remove NSG rule"
          fi